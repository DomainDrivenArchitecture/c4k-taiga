apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-back-deployment
  labels:
    app.kubernetes.part-of: c4k-taiga
    app.kubernetes.io/component: taiga-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: taiga
  template: 
    metadata:
      labels:
        app: taiga
    spec:
      initContainers: # ToDo: this needs to run only once!
      - name: taiga-manage
        image: taigaio/taiga-back:latest
        imagePullPolicy: IfNotPresent
        ports: # ToDo: we may need to check for the DB pod to be live
        - name: http
          containerPort: 80
        command: 
        - python manage.py && python manage.py createsuperuser
        volumeMounts:
        - name: taiga-static
          mountPath: /taiga-back/static
          readOnly: false
        - name: taiga-media
          mountPath: /taiga-back/media
          readOnly: false
        envFrom:
        - configMapRef:
          name: taiga-back-configmap
        - secretRef:
          name: taiga-back-secret
        - secretRef:
          name: taiga-rabbitmq-secret
        env:
        - name: POSTGRES_USER # ToDo: Does taiga need a specific postgres version? Maybe test this
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: postgres-db
        - name: POSTGRES_HOST
          value: "postgresql-service"
        - name: POSTGRES_PORT
          value: 5432
        - name: CELERY_ENABLED
          value: false
      containers:
      - name: taiga-back
        image: taigaio/taiga-back:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
        volumeMounts:
        - name: taiga-static
          mountPath: /taiga-back/static
          readOnly: false
        - name: taiga-media
          mountPath: /taiga-back/media
          readOnly: false
        envFrom:
        - configMapRef:
            name: taiga-configmap
        - secretRef:
            name: taiga-secret
        - secretRef:
            name: taiga-rabbitmq-secret
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: postgres-db
        - name: POSTGRES_HOST
          value: "postgresql-service"
        - name: POSTGRES_PORT
          value: 5432
      
      volumes: # ToDo: Remove Volumes where not necessary
        - name: taiga-static
          persistentVolumeClaim:
            claimName: taiga-static
        - name: taiga-media
          persistentVolumeClaim:
            claimName: taiga-media
